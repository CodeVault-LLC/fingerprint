// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.2
// source: proto/fingerprint.proto

package fingerprint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FingerprintType int32

const (
	FingerprintType_SCRIPT FingerprintType = 0
)

// Enum value maps for FingerprintType.
var (
	FingerprintType_name = map[int32]string{
		0: "SCRIPT",
	}
	FingerprintType_value = map[string]int32{
		"SCRIPT": 0,
	}
)

func (x FingerprintType) Enum() *FingerprintType {
	p := new(FingerprintType)
	*p = x
	return p
}

func (x FingerprintType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FingerprintType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_fingerprint_proto_enumTypes[0].Descriptor()
}

func (FingerprintType) Type() protoreflect.EnumType {
	return &file_proto_fingerprint_proto_enumTypes[0]
}

func (x FingerprintType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FingerprintType.Descriptor instead.
func (FingerprintType) EnumDescriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{0}
}

type AddFingerprintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pattern       string                 `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Type          FingerprintType        `protobuf:"varint,4,opt,name=type,proto3,enum=fingerprint.FingerprintType" json:"type,omitempty"`
	Keywords      []string               `protobuf:"bytes,5,rep,name=keywords,proto3" json:"keywords,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFingerprintRequest) Reset() {
	*x = AddFingerprintRequest{}
	mi := &file_proto_fingerprint_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFingerprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFingerprintRequest) ProtoMessage() {}

func (x *AddFingerprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFingerprintRequest.ProtoReflect.Descriptor instead.
func (*AddFingerprintRequest) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{0}
}

func (x *AddFingerprintRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFingerprintRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddFingerprintRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *AddFingerprintRequest) GetType() FingerprintType {
	if x != nil {
		return x.Type
	}
	return FingerprintType_SCRIPT
}

func (x *AddFingerprintRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type AddFingerprintResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFingerprintResponse) Reset() {
	*x = AddFingerprintResponse{}
	mi := &file_proto_fingerprint_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFingerprintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFingerprintResponse) ProtoMessage() {}

func (x *AddFingerprintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFingerprintResponse.ProtoReflect.Descriptor instead.
func (*AddFingerprintResponse) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{1}
}

func (x *AddFingerprintResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFingerprintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFingerprintRequest) Reset() {
	*x = GetFingerprintRequest{}
	mi := &file_proto_fingerprint_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFingerprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFingerprintRequest) ProtoMessage() {}

func (x *GetFingerprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFingerprintRequest.ProtoReflect.Descriptor instead.
func (*GetFingerprintRequest) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{2}
}

func (x *GetFingerprintRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFingerprintResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Pattern       string                 `protobuf:"bytes,4,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Keywords      []string               `protobuf:"bytes,6,rep,name=keywords,proto3" json:"keywords,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFingerprintResponse) Reset() {
	*x = GetFingerprintResponse{}
	mi := &file_proto_fingerprint_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFingerprintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFingerprintResponse) ProtoMessage() {}

func (x *GetFingerprintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFingerprintResponse.ProtoReflect.Descriptor instead.
func (*GetFingerprintResponse) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{3}
}

func (x *GetFingerprintResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFingerprintResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFingerprintResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetFingerprintResponse) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *GetFingerprintResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetFingerprintResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *GetFingerprintResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFingerprintResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type MatchFingerprintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchFingerprintRequest) Reset() {
	*x = MatchFingerprintRequest{}
	mi := &file_proto_fingerprint_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFingerprintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFingerprintRequest) ProtoMessage() {}

func (x *MatchFingerprintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFingerprintRequest.ProtoReflect.Descriptor instead.
func (*MatchFingerprintRequest) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{4}
}

func (x *MatchFingerprintRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type MatchFingerprintResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matched       []*MatchedFingerprint  `protobuf:"bytes,1,rep,name=matched,proto3" json:"matched,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchFingerprintResponse) Reset() {
	*x = MatchFingerprintResponse{}
	mi := &file_proto_fingerprint_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFingerprintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFingerprintResponse) ProtoMessage() {}

func (x *MatchFingerprintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFingerprintResponse.ProtoReflect.Descriptor instead.
func (*MatchFingerprintResponse) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{5}
}

func (x *MatchFingerprintResponse) GetMatched() []*MatchedFingerprint {
	if x != nil {
		return x.Matched
	}
	return nil
}

type MatchedFingerprint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pattern       string                 `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchedFingerprint) Reset() {
	*x = MatchedFingerprint{}
	mi := &file_proto_fingerprint_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchedFingerprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchedFingerprint) ProtoMessage() {}

func (x *MatchedFingerprint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fingerprint_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchedFingerprint.ProtoReflect.Descriptor instead.
func (*MatchedFingerprint) Descriptor() ([]byte, []int) {
	return file_proto_fingerprint_proto_rawDescGZIP(), []int{6}
}

func (x *MatchedFingerprint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchedFingerprint) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

var File_proto_fingerprint_proto protoreflect.FileDescriptor

var file_proto_fingerprint_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x28,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xe6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x31, 0x0a, 0x17, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x55, 0x0a,
	0x18, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x2a, 0x1d, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x10, 0x00, 0x32, 0xab, 0x02, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_fingerprint_proto_rawDescOnce sync.Once
	file_proto_fingerprint_proto_rawDescData = file_proto_fingerprint_proto_rawDesc
)

func file_proto_fingerprint_proto_rawDescGZIP() []byte {
	file_proto_fingerprint_proto_rawDescOnce.Do(func() {
		file_proto_fingerprint_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_fingerprint_proto_rawDescData)
	})
	return file_proto_fingerprint_proto_rawDescData
}

var file_proto_fingerprint_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_fingerprint_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_fingerprint_proto_goTypes = []any{
	(FingerprintType)(0),             // 0: fingerprint.FingerprintType
	(*AddFingerprintRequest)(nil),    // 1: fingerprint.AddFingerprintRequest
	(*AddFingerprintResponse)(nil),   // 2: fingerprint.AddFingerprintResponse
	(*GetFingerprintRequest)(nil),    // 3: fingerprint.GetFingerprintRequest
	(*GetFingerprintResponse)(nil),   // 4: fingerprint.GetFingerprintResponse
	(*MatchFingerprintRequest)(nil),  // 5: fingerprint.MatchFingerprintRequest
	(*MatchFingerprintResponse)(nil), // 6: fingerprint.MatchFingerprintResponse
	(*MatchedFingerprint)(nil),       // 7: fingerprint.MatchedFingerprint
}
var file_proto_fingerprint_proto_depIdxs = []int32{
	0, // 0: fingerprint.AddFingerprintRequest.type:type_name -> fingerprint.FingerprintType
	7, // 1: fingerprint.MatchFingerprintResponse.matched:type_name -> fingerprint.MatchedFingerprint
	1, // 2: fingerprint.FingerprintService.AddFingerprint:input_type -> fingerprint.AddFingerprintRequest
	3, // 3: fingerprint.FingerprintService.GetFingerprint:input_type -> fingerprint.GetFingerprintRequest
	5, // 4: fingerprint.FingerprintService.MatchFingerprint:input_type -> fingerprint.MatchFingerprintRequest
	2, // 5: fingerprint.FingerprintService.AddFingerprint:output_type -> fingerprint.AddFingerprintResponse
	4, // 6: fingerprint.FingerprintService.GetFingerprint:output_type -> fingerprint.GetFingerprintResponse
	6, // 7: fingerprint.FingerprintService.MatchFingerprint:output_type -> fingerprint.MatchFingerprintResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_fingerprint_proto_init() }
func file_proto_fingerprint_proto_init() {
	if File_proto_fingerprint_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_fingerprint_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_fingerprint_proto_goTypes,
		DependencyIndexes: file_proto_fingerprint_proto_depIdxs,
		EnumInfos:         file_proto_fingerprint_proto_enumTypes,
		MessageInfos:      file_proto_fingerprint_proto_msgTypes,
	}.Build()
	File_proto_fingerprint_proto = out.File
	file_proto_fingerprint_proto_rawDesc = nil
	file_proto_fingerprint_proto_goTypes = nil
	file_proto_fingerprint_proto_depIdxs = nil
}
